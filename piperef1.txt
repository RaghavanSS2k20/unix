
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/wait.h>

#define READ 0
#define WRITE 1

int main(int argc, char* argv[]){
        int fd1[2];
        int fork1_result;
        if(argc !=4){
                printf("Incorrect usage\t%s command1 command2 command3\n\n", argv[0]);
                exit(3);
        }
        if(pipe(fd1) == -1){
                perror("pipe could not be created");
                exit(1);
        }

        fork1_result = fork();
        if(fork1_result <0){
                perror("fork failed");
                exit(2);
        }

        if(fork1_result == 0){
                close(fd1[READ]);
                dup2(fd1[WRITE], 1);
                close(fd1[WRITE]);
                execlp(argv[1], argv[1], NULL);
        }

        else{
                wait(NULL);
                int fd2[2];
                int fork2_result;
                if(pipe(fd2)==-1){
                        perror("pipe could not be created");
                        exit(1);
                }

                fork2_result = fork();

                if(fork2_result <0){
                        perror("fork failed");
                        exit(2);
                }
                close(fd1[WRITE]);
                if(fork2_result==0){
                        close(fd2[READ]);
                        dup2(fd1[READ], 0);
                        close(fd1[READ]);
                        dup2(fd2[WRITE], 1);
                        close(fd2[WRITE]);
                        execlp(argv[2], argv[2], NULL);
                }
                else{
                        wait(NULL);
                        close(fd1[READ]);
                        close(fd2[WRITE]);
                        dup2(fd2[READ], 0);
                        close(fd2[READ]);
                        execlp(argv[3], argv[3], NULL);
                }
        }
}
